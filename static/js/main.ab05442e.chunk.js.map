{"version":3,"sources":["photos/Chengdu/bags.jpg","components/Nav.js","components/cities/Beijing.js","components/cities/Chengdu.js","components/cities/XiAn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","className","NavLink","to","Component","Beijing","src","Bags","alt","Chengdu","XiAn","App","BrowserRouter","components_Nav","Route","path","render","cities_Beijing","cities_Chengdu","cities_XiAn","Boolean","window","location","hostname","match","Doc","document","title","src_App","React","ReactDOM","src_Doc","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kOCiBzBC,mLAZP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,cACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAK,WAAYF,UAAY,mBAAtC,SACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAK,WAAWF,UAAY,mBAArC,YACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAK,QAAQF,UAAY,mBAAlC,mBAPNG,8BCiCHC,mLA9BP,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACbH,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAOC,IAAMC,IAAM,WAE5BV,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eACbH,EAAAC,EAAAC,cAAA,4aAMAF,EAAAC,EAAAC,cAAA,4PAIAF,EAAAC,EAAAC,cAAA,qCAA4BF,EAAAC,EAAAC,cAAA,2DAA5B,4IAEuBF,EAAAC,EAAAC,cAAA,4BAFvB,6KApBFI,aCQPK,mLARP,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAAjB,kCAHUG,aCUPM,mLARP,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,gCAHOG,aC2BJO,mLAdX,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,KAAO,WAAWC,OAAW,kBAAMlB,EAAAC,EAAAC,cAACiB,EAAD,SAC1CnB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,KAAO,WAAWC,OAAW,kBAAMlB,EAAAC,EAAAC,cAACkB,EAAD,SAC1CpB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,KAAO,QAAQC,OAAW,kBAAMlB,EAAAC,EAAAC,cAACmB,EAAD,kBAR/Bf,aCDEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,qECXAC,8LAEAC,SAASC,MAAQ,kDAIjB,OACE7B,EAAAC,EAAAC,cAAC4B,EAAD,aAPUC,IAAMzB,WAYtB0B,IAASd,OACPlB,EAAAC,EAAAC,cAAC+B,EAAD,MACAL,SAASM,eAAe,SD4GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ab05442e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bags.305b5a18.jpg\";","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"Nav\">\r\n                <ul className = \"cities-btn\">\r\n                    <li><NavLink to = \"/beijing\"  className = \"removehyperlink\">Home</NavLink></li>\r\n                    <li><NavLink to = \"/chengdu\" className = \"removehyperlink\">Chengdu</NavLink></li>\r\n                    <li><NavLink to = \"/xian\" className = \"removehyperlink\">Xi'An</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\n\r\nimport Bags from \"../../photos/Chengdu/bags.jpg\";\r\n\r\nclass Beijing extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"Beijing\">\r\n                <h2>After 6 months, it's goodbye to Beijing.</h2>\r\n                <div className = \"content\">\r\n                    <div className = \"photo\">\r\n                        <img src = {Bags} alt = \"day 1\"/>\r\n                    </div>\r\n                    <div className = \"description\">\r\n                        <p> February 2017 - June 2017. The start of a journey signifies the end of another.\r\n                        The best 5-6 months of my university life culminated with a solo backpacking trip.\r\n                        I started off feeling a little lonely, since the last half a year had been meaningfully spent with friends\r\n                        eating, playing, singing, into the middle of the night with friends, incurring severe sleep debts along the way (but\r\n                        they were well worth it!). </p>\r\n                        \r\n                        <p> I had planned for this before I flew to Beijing, to cap off my exchange and also to challenge myself\r\n                        individually. You could consider this my \"grad trip\" as well (and sure enough it was; because I did not really\r\n                        travel after I graduated).</p>\r\n                        \r\n                        <p>Beginning my travel with <strong>1 backpack, 1 handcarry and a small sling</strong> to place any valuables,\r\n                        I think it weighted about 15kilos in total. Had to make sure it was less than 20 so that\r\n                        I could get on flights <em>without hassle</em>! It was also important to keep my hands free as much\r\n                        as possible. Somehow I felt a greater sense of security because it would help when I needed to move fast.</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Beijing;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Chengdu extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"Chengdu\">\r\n                Talk about Chengdu here\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chengdu;\r\n","import React, { Component } from 'react';\r\n\r\nclass XiAn extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"XiAn\">\r\n                Talk about Xi'An here\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default XiAn;\r\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Route  \n} from 'react-router-dom';\n  \n\nimport Nav from \"./components/Nav\";\nimport Beijing from \"./components/cities/Beijing\";\nimport Chengdu from \"./components/cities/Chengdu\";\nimport XiAn from \"./components/cities/XiAn\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Nav />\n          <Route path = \"/beijing\" render = { () => <Beijing/> } />\n          <Route path = \"/chengdu\" render = { () => <Chengdu/> } />\n          <Route path = \"/xian\" render = { () => <XiAn/> } />\n        </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n\nclass Doc extends React.Component {\n    componentDidMount(){\n      document.title = \"Backpacking'17\"\n    }\n  \n    render() {\n      return (\n        <App />\n      )\n    }\n  }\n  \n  ReactDOM.render(\n    <Doc/>,\n    document.getElementById('root')\n  );\n  \n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}